scalar Date

type AuthPayload {
  accessToken: String
}

input LoginInput {
  email: String
  password: String
}

input RegisterUserInput {
  id: String
  email: String
  password: String
  phone: String
  address: String
  image: String
  role: RoleEnum
}

type Query {
  helloo: String!
  getProfile: String!
}

type Mutation {
  authRegister(registerUserInput: RegisterUserInput!): User
  # login(loginInput: LoginInput): AuthPayload
  login(email: String, password: String): AuthPayload
}